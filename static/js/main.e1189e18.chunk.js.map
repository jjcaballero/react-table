{"version":3,"sources":["makeData.js","App.js","index.js"],"names":["range","len","arr","i","push","newPerson","statusChance","Math","random","firstName","namor","generate","words","numbers","lastName","age","floor","visits","progress","status","Styles","styled","div","withConfig","displayName","componentId","Table","_ref","columns","data","_useTable","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","react_default","a","createElement","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","App","React","useMemo","Header","accessor","id","moment","born","local","format","_len","arguments","length","lens","Array","_key","makeDataLevel","depth","undefined","d","Object","objectSpread2","subRows","makeData","console","log","dataFromJson","json","result","keys","forEach","key","json2array","jsonData","usedData","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e1189e18.chunk.js","sourcesContent":["import namor from 'namor'\n\nconst range = len => {\n  const arr = []\n  for (let i = 0; i < len; i++) {\n    arr.push(i)\n  }\n  return arr\n}\n\nconst newPerson = () => {\n  const statusChance = Math.random()\n  return {\n    firstName: namor.generate({ words: 1, numbers: 0 }),\n    lastName: namor.generate({ words: 1, numbers: 0 }),\n    age: Math.floor(Math.random() * 30),\n    visits: Math.floor(Math.random() * 100),\n    progress: Math.floor(Math.random() * 100),\n    status:\n      statusChance > 0.66\n        ? 'relationship'\n        : statusChance > 0.33\n        ? 'complicated'\n        : 'single',\n  }\n}\n\nexport default function makeData(...lens) {\n  const makeDataLevel = (depth = 0) => {\n    const len = lens[depth]\n    return range(len).map(d => {\n      return {\n        ...newPerson(),\n        subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined,\n      }\n    })\n  }\n\n  return makeDataLevel()\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTable } from 'react-table'\n\nimport makeData from './makeData'\n\nimport jsonData from './data.json';\n\nimport moment from 'moment';\n\n\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`\n\nfunction Table({ columns, data }) {\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data,\n  })\n\n  // Render the UI for your table\n  return (\n    <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map(cell => {\n                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n              })}\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n  )\n}\n\nfunction json2array(json){\n    var result = [];\n    var keys = Object.keys(json);\n    keys.forEach(function(key){\n        result.push(json[key]);\n    });\n    return result;\n}\n\nfunction App() {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Name',\n        columns: [\n          {\n            Header: 'First Name',\n            accessor: 'firstName',\n          },\n          {\n            Header: 'Last Name',\n            accessor: 'lastName',\n          },\n        ],\n      },\n      {\n        Header: 'Info',\n        columns: [\n          {\n            Header: 'Age',\n            accessor: 'age',\n          },\n          {\n            Header: 'Visits',\n            accessor: 'visits',\n          },\n          {\n            Header: 'Status',\n            accessor: 'status',\n          },\n          {\n            Header: 'Profile Progress',\n            accessor: 'progress',\n          },\n          {\n            id: 'born',\n            Header: 'Born',\n            accessor: row => {\n              return moment(row.born)\n                .local()\n                .format(\"DD-MM-YYYY hh:mm a\")\n            }\n          }\n        ],\n      },\n    ],\n    []\n  )\n\n  const data = React.useMemo(() => makeData(20), [])\n  console.log(data);\n\n  var dataFromJson = json2array(jsonData)\n  console.log(dataFromJson);\n\n  const usedData = dataFromJson[0];  // comment to take data from custom json\n  //const usedData = data;           // uncomment to take the original data randomly created on the fly\n\n  return (\n    <Styles>\n      <Table columns={columns} data={usedData} />\n    </Styles>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}